{
  "parser": "@typescript-eslint/parser", // Specifies the ESLint parser
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended", // Uses the recommended rules from @eslint-plugin-react
    "plugin:@typescript-eslint/recommended", // Uses the recommended rules from the @typescript-eslint/eslint-plugin
    "prettier/@typescript-eslint", // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
    "plugin:prettier/recommended", // Enables eslint-plugin-prettier and displays prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
    "plugin:jsx-a11y/recommended" // check accessibility rules on JSX elements.
  ],
  "plugins": ["react", "@typescript-eslint", "prettier", "jsx-a11y", "simple-import-sort"],
  "env": {
    "browser": true,
    "jest": true,
    "es6": true,
    "node": true
  },
  "parserOptions": {
    "ecmaVersion": 2018, // Allows for the parsing of modern ECMAScript features
    "sourceType": "module", // Allows for the use of imports
    "ecmaFeatures": {
      "jsx": true // Allows for the parsing of JSX
    }
  },
  "settings": {
    "react": {
      "version": "detect" // Tells eslint-plugin-react to automatically detect the version of React to use
    }
  },
  "rules": {
    // Place to specify ESLint rules. Can be used to overwrite rules specified from the extended configs
    "prettier/prettier": "warn",
    "no-console": "warn",
    "object-shorthand": "warn",
    "react/jsx-boolean-value": ["warn", "always"],
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": true
      }
    ],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/ban-ts-ignore": "off",
    "@typescript-eslint/array-type": [2, { "default": "array-simple" }],
    "@typescript-eslint/no-empty-function": ["warn", { "allow": ["arrowFunctions"] }],
    "@typescript-eslint/no-var-requires": 0,
    "@typescript-eslint/camelcase": 0,
    "@typescript-eslint/no-explicit-any": 0,
    "@typescript-eslint/no-use-before-define": 0,
    "simple-import-sort/sort": [
      "warn",
      {
        "groups": [
          // Packages. `react` related packages come first. Internal packages.
          ["^react", "^@?\\w", "^(ui|components|utils|config)(/.*|$)"],
          // Side effect imports.
          ["^\\u0000"],
          // Parent imports. Put `..` last.
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          // Style imports.
          ["^.+\\.s?css$"]
        ]
      }
    ]
  }
}
